
#########################################################################################
########################    Bioinformatics Stronghold    ################################
#########################################################################################

### problem

s = 'AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC'

print (s)

len(s)

count_A = s.count('A')
count_T = s.count('T')
count_G = s.count('G')
count_C = s.count('C')

print (count_A, count_C, count_G, count_T)


## dataset

dataset = 'CGCTATAGAACGAGTAGTAATGGGTGTATAGCATATTAACTATGCTGGGTATTCGATTCTCTCCTAGCCATTATAAGTGTCTTTCGATTCAGGCGTGCGCCCGTAGCGAGTCCGACGAATAAGGAGTAGCGACTGAGTTCAACTGCCCGAGGCCGCAATCTGCAGCCTCACCCTTAAGTGCTGCTGTACCGCACAGAACGCAGGTGTTCTCCAGGCTCGAATACAGTTCCGGGTGATCTCGGACTTCTGCCACAACGTGAGCTGTTCATTTTTGCGCAACCTACTGAGAGCTGAGAGGCCCACCTTTATAACTGGGGCCTTCGTCCAAAGGCCTTAACGGAGCAGCACTAAACAGTTTAAAAACCCTGTGTCCCGTCTCCATAGATTAAACTTGGATGTCATAAGCACTTGTTTTTTGGGACTATGGGTTGAATTCACCCGGGTTCAGAAGAATCGCGTACTAAGCATCCTAAGAGGACATTGTAGCCGATATCACTGAGGCTGAGACCGATCTTGCTTTGAGCACGTCAAAAAAGGAAAAGAGGGGGATGGCCATTGGGGAGACAGGTCATAGGTGAAACTAGACATCATCTATTATTCATAAAAACCTTTTGGCTGTAACGCATGGGTCCAATTTCGGAGCGCACAAATCCGTGGGTTTTTCTGCTCTTCCCGTTTGGAGAAGAGGAGGCTCCAACCTCCAGTGCCACTGCCACACGTAATTACAATTCTGTCTTAACTACCGTGGAAAGCACCGCGCGCAGACGCGCCGTTCTAATTGCGAATACAGCCAGACACTAAGCAGGGTCAGTATTTTCTAACCGAAAGCTGGCTAGGTTGTAATGTCGCCGGTGATTACCGATTGAGTGGTGTTTGCAATGCCTCCA'

print (dataset)

len(dataset)

count_A = dataset.count('A')
count_T = dataset.count('T')
count_G = dataset.count('G')
count_C = dataset.count('C')

print (count_A, count_C, count_G, count_T)

#########################################################################################################################


t = "GATGGAACTTGACTACGTAAATT"
print (t)

u = t.replace ('T', 'U')
print(u)


t2 = "ACTTTGTTGTATCTAAGGTCCCCCCGCTACGAACGAAAGGGTTTGGTTTGCTCTATACCTGTGTCACTAATGAAGTGACCTGGCCGCAAACCACGGGGGTGTTAGACTACAATTTATAAGACGGTGATTAGGGCCAGCGCACTGTAGGATACGTCAGGACCTCGTTCGAGTAGCCATCTCAGTTCCTCACGCTTCGACATGTGCGATGAGGAACTTTTTTCTCCATGCTAAGTGTGCATGCATCACGAGCCAACATTAGTCAGGATTCAGTTGACTCCGATGCGGAGAATTCTCAACTGCCCTTTGCTAGGCCACTATACTACAGCGCGTGCCAACTTGATGTTGAATATAGCGACCAGCGTTTGCTGCATATCCGGTAGCTGATATCACTCATGCCCATTGTATATCTGCCCTGGTGGTACGTCGTACGAGCAATGCTGCGATAATTAAATGGTGCGCCGGACGAGGCAAGTGGGCCGTCTCGCCAAACGCACCACGTCTCAGCTATATCCATTAGCAGAATGAAAGCCACATAGAAGAATGCGTGGGTGATGTTTGATGAAGAATTCAATGCATACACGCTTACCGGGTGGTGTGCTAACAAGGGGATCGTCCGGAAAGAGTGGCTGGAACTACTCAGCACAATCATGGGCTGGCGCAGACCACCTGTCTATCACACTCAGCTGCTACATCACACGGCTTGGGTAGTTCCCGGTGAGATTATCTCTATAGAACTAACTCATCGTATATAGAAACGGCCGCGGGTCGGTTACTCCCCCTTGGCAAGGCCCCCACTCCAGCCACAATGTTATCACTGTTTCGCTAAGCCGCATTTCTGGAGCAGGCTGCAATTAGAGGTAGTGGATGGAACGCGCATCAGGCACAATGACCGAAATTTCTTATGCGCGGCTTCCTCATCCGGATAA"

print(t2)

u2 = t2.replace ('T', 'U')
print(u2)


############################################################################################################

s = 'AAAACCCGGT'
print (s)

### complement mapping

complement = {'A':'T', 'T':'A', 'G':'C', 'C':'G'}

### Find the complement of each nucleotide and reverse the string

reverse_complement_s = "".join(complement[base] for base in reversed(s))

## "".join(): Joins the complemented characters into a single string.

## reversed(s): Reverses the input DNA string. 

## 'complement[base] for base in reversed(s)': Replaces each nucleotide in the reversed string with its complement using the complement dictionary.


print (reverse_complement_s)


### problem dataset

s = 'TAGTCACCTCCATAGCCAGGTGTGATTGTGGATGACCGCGTGTAAGGCCGTCGATATGCTATGTCGGTAAGTTACGTATTAATTACAAATGACGGGCGTAGGTGTTACTGCCGTAGCTTAGTCTCGTAACACGTATCTCTGCCACTCGCGTCCGGTGCCACTAAGCAACATAAAATGCAGCTCGAAGGATACGTCAATCACACTTTTGCACAAACAGTCCGTAATGTTTAGCAATATATAGAAGAATGTCCCGGAGGCATCCCTCATCGTGAACTGTGATGAGACGAAACAAATGCAGCAACCCTTACCGCATCGCTCATTGTTGTCAGTCGTCCCGCTCATAGTGATGGATCTGAGATCATGTCCTACATCCCTACGCTTCGTGCTATTCGTACTAAACTTCTACAATGCTCTGAAAAGAAAACTGGAGGCATATTTGGAGTGAATCCAAAAGGGGGGTTCCCTTGTGCTGTGAGGGTAGAGCAATGGAAGGCAAAGTTGTGCGGTTGTGACATCTCTGGTAGCTATCCTAGAAATAGGTTACGATTCTGTGAATGGCTTTATTCCTCAACGACGAATCGCATACTCTCATCTAATGTCCGACGGCAGTTACGGCCCCACACACGGGGACCAATGCTTAAAGGTGCTGTCTGTCTGAATCACCTAGGTCGACAACCCCAGGTAATGACAGAACTGGGCATGTACACGCTCTAATACATCGCGGTACTCTTATGTGGCTGAGTTCGACGATGACCTGGGGATGAATTGGATCAAGAGAACCTTAGTACCAAAAGGGTACTCTACTCTCTATACTAGCAATTGCGCGATCACTTATTCGTATATGTCGATCGTGACACGGTCGCCGCCCGCCCACACTTACTGACGAGTCCAACAGGCAAATCTAACATCGCGGCGTAAAAGAAATGGCTGTTGT'


print (s)

### complement mapping

complement = {'A':'T', 'T':'A', 'G':'C', 'C':'G'}

### Find the complement of each nucleotide and reverse the string

reverse_complement_s = "".join(complement[base] for base in reversed(s))


print (reverse_complement_s)

######################################################################################################################


#######################################################################################################
######################    Rabbits and Recurrence Relations  ###########################################
#######################################################################################################

## Recurrence relation and Fibonacci sequence

##  In case of Fibonacci's rabbits, any given month will contain the rabbits that were alive the previous month, plus any new
## offspring. A key observation is that the number of offspring in any month is equal to the number of rabbits that were alive
## two months prior. As a result, if F(n) respresents the number of rabbit pairs after n-th month, then we obtain the Fibonacci
## sequence having terms Fn that are defined by the recurrence relation; F(n) = F(n-1) + F(n-2) (with F1=F2=1 to initiate the sequence). 


## Problem

## The total number of rabbit pairs that will be present after n months, if we begin with 1 pair and in each generation, 
## every pair of reproduction-age rabbits produces a litter of k rabbit pairs (instead of only 1 pair).

n = 5
k = 3

## Problem understanding ##

## we can start with 1 rabbit in the first month month.
## rabbits mature after 1 month i.e., they start reproducing in their second month.
## each mature pair produce `k` new pairs of rabbits per month.
## the task is to calculate total number of rabbit pairs after `n` months.


## Formula:
## this problem can be modeled using a modified Fibanacci recurrence.

# F(n) = F(n-1) + k.F(n-2)

## F(n-1) is the rabbit pair alive from previous month
## k.F(n-2) is the rabbit pairs produced by mature rabbits.

### Manual way

## n=5, k=3; assumption F1=F2=1
## Month 1: F(1) = 1
## Month 2: F(2) = 1
## Month 3: F(3) = F(2) + 3.F(1) = 1+3 = 4
## Month 4: F(4) = F(3) + 3.F(2) = 4+3 = 7
## Month 5: F(5) = F(4) + 3.F(3) = 7+12 = 19

## output answer = 19

n = 5
k = 3

def rabbit_pairs(n, k):
    ## intialize the first 2 months
    if n == 1 or n == 2:
        return 1
    
    ## variables to store F(n-1), F(n-2)

    prev, curr = 1, 1
    ## prev represents F(n−2): the number of rabbit pairs from two months ago.
    ## curr represents F(n−1): the number of rabbit pairs from the previous month.

    ## calculate rabbit pairs from month 3 to n
    for _ in range(3, n+1):
       next_val = curr + k*prev
       prev, curr = curr, next_val

       ## next_val = curr + k * prev
       ### Uses the formula: F(n)=F(n−1)+k⋅F(n−2)

       ## prev, curr = curr, next_val
       ## Updates the variables for the next iteration:
       ## prev (F(n-2)) becomes the current value of curr.
       ## curr (F(n-1)) becomes the newly calculated value, next_val.

    return curr

## After the loop ends, curr will hold F(n)F(n), the total number of rabbit pairs in month n.

## input values
n, k = 5, 3
print(rabbit_pairs(5, 3))


## Downloaded Dataset


def rabbit_pairs(n, k):
    ## intialize the first 2 months
    if n == 1 or n == 2:
        return 1
    
    ## variables to store F(n-1), F(n-2)

    prev, curr = 1, 1
    
    ## calculate rabbit pairs from month 3 to n
    for _ in range(3, n+1):
       next_val = curr + k*prev
       prev, curr = curr, next_val

    return curr

## input values
n, k = 31, 2
print(rabbit_pairs(31, 2))
### output: 715827883


#################################################################################################################
#################################################################################################################


#####################################################################################
###########################  Computing GC Content  ##################################
#####################################################################################


fasta_sequence = """>seq1
AGCTATAG
"""

print(fasta_sequence)

s = "AGCTATAG"
print (s)

count_G = s.count('G')
count_C = s.count('C')

print(len(s))

GC_content = (count_G + count_C)/(len(s))

print (GC_content)

#########
### Problem

rosalind_seq = """>Rosalind_6404
CCTGCGGAAGATCGGCACTAGAATAGCCAGAACCGTTTCTCTGAGGCTTCCGGCCTTCCC
TCCCACTAATAATTCTGAGG
>Rosalind_5959
CCATCGGTAGCGCATCCTTAGTCCAATTAAGTCCCTATCCAGGCGCTCCGCCGAAGGTCT
ATATCCATTTGTCAGCAGACACGC
>Rosalind_0808
CCACCCTCGTGGTATGGCTAGGCATTCAGGAACCGGAGAACGCTTCAGACCAGCCCGGAC
TGGGAACCTGCGGGCAGTAGGTGGAAT"""

print(rosalind_seq)

### initialize a dictionary to store sequences by their headers

fasta_dict = {}

## now split the input into lines and process them

current_header =  None ## to keep track of the current header

for line in rosalind_seq.strip().split("\n"):
    if line.startswith(">"): ## it is a header
        current_header = line[1:] # remove the ">" to get the header name
        fasta_dict[current_header] = ""  ## start a new entry in the dictionary
    else:
        ## otherwise it a part of sequence, append it to current header.
        fasta_dict[current_header] += line.strip()

## at this point fasta_dict{} contains headers as key and full sequences as values

print(fasta_dict)

## function to calculate GC content

def calculate_gc_content(sequence):
    g_count = sequence.count('G')
    c_count = sequence.count('C')
    return ((g_count + c_count)/len(sequence))*100 if sequence else 0

## calculate and print GC content for GC content
for header, sequence in fasta_dict.items():
    gc_content = calculate_gc_content(sequence)
    print(f"{header}: {gc_content:.2f}%")


max_gc_header = None
max_gc_content = 0


for header, sequence in fasta_dict.items():
    gc_content = calculate_gc_content(sequence)
    if gc_content > max_gc_content:
        max_gc_content = gc_content
        max_gc_header = header

print(f"Highest GC Content:")
print(f"{max_gc_header}: {max_gc_content:.6f}%")

#### explanation of the above code

## Initializing Variables

## fasta_dict{}: An empty dictionary that will store the FASTA data.
## we will add headers as keys (e.g., "Rosalind_6404"), and the corresponding sequences as the values.

## current_header: A variable to keep track of the most recent header while processing the file.
## Initially set to `None`` because no header has been encountered yet.

## rosalind_seq.strip(): Removes any extra blank lines or whitespace at the start/end of the input string.

## .split("\n"): Splits the input string into individual lines based on newlines (\n).

## for line in ...: Iterates through each line of the input FASTA data.

## line.startswith(">"): Identifies header lines, which always start with > in FASTA format.

## line[1:]: Removes the > symbol to extract the header name (e.g., "Rosalind_6404").

## fasta_dict[current_header] = "": Adds the header as a key in the dictionary and initializes an empty string for its sequence.


## else:
#   fasta_dict[current_header] += line.strip()

## the above code sequence lines (i.e., lines that don’t start with >).

## line.strip(): Removes any whitespace or newline characters from the sequence line.
## fasta_dict[current_header] += ...: Concatenates the sequence line to the current header's sequence in the dictionary.

## fasta_dict.items(): Retrieves all header-sequence pairs from the dictionary.

## calculate_gc_content(sequence): Calculates the GC content for the current sequence.

## print(f"..."): Prints the header and the GC content (formatted to 2 decimal places).


#### Rosalind problem dataset

rosalind_seq = """>Rosalind_8361
AGCGAGACTTTTCTGTTGTGTACAGGTACTCGGTTACCGGGCTTGTGCAATTGGCTACGC
CCGACCCCGCTTACTGAGTATTAGCATCGCGAAGGATTCCTAGAGTTTGTCGTAAATTGC
AGGGTATCAAAATTTAGCTATTCTACCGATACGTATTCCCAGCCTTTCCAGGTCTGTCCC
AGAACAAGACGTTGCTGTAAAAAGTCACTAGCGCCTATGAGCCAATTCCCTTAACCCGGC
CCGTGGTTGAGCCGCTCGCTGAAGCCTGCTAACGCAGGAACGCTATATGCGGGCTCCATA
TAGGTAAACGGCCAAACTGTAGGTCAACTCTTGTCTACTACCCGAACTTTGTGGTGGTGC
GTTTATCAGTTAATTCCAATCCTATTACACGGCTGAGGTAATGCGTCATTCAAAGGCGCA
GGTGCTTATTCCGTCGAGACTTTAACCTAACTGGAGGAGGGGACTTTAAAACTGTGCCCT
TCCTCCTCCCAGAATTATCTCGACTGAACATGGACCACAGTCTCGTGAATGGCATCCCGG
CTTACCTCGCATGCCATTGATTCGGCTGCCCGGATGACAGTCTGATGTAGTGTCCTGGCT
CGCGTCGTAATACACCCCAATACACGCTAGCACTCAGTTTTAACACCTGCTGAAGAGAAA
GCTACGGCTCATTTTGCCCTACATACGAAGGTTCTTTTTTACTGCTCGAGCGAAGTCAAC
GGGGCCAGGGCGGTGTCTATCAAACACTAGAACTACGGAATGAGTCGGTGGGGGCGCCAA
GCCGAGTAATACAAGTTTACATAGTCCATTGCTTACCATCCCTGCAGCTAATGCCCAGCG
CGCTTGCGTTGCCTTGTCTGCGGTATGTGCTACTGAACGTATCGGAGTTATAAAAAAGGA
TCGATCCAGGCGGGCCTTCCGTGGTCGGCT
>Rosalind_7076
GCGTATAATATAGCATCGCTGATCATTCCAGGCACAGGATTGGAGTGACGCCTCAATGTG
CAATGGAGAATCGGACACAACCCTGGAATGACATTCCGATTTAATTCCTTACATAGCCGC
ACGATAGGAAGTCTGTGCTGGACACGCTGTGGGAACCGCGGCTATCTATTTCCCAAGGAC
TGACTAGCTATCCATTTTTCCTGGATTTATTTAACGCCCCGTAGATCGAAAACTCTTTTC
GCTAATGAAATATCCTCAACCAATACTAAATTTAGTTTCTTTACTCAGCGGTTAGGGTTA
CTGGATACGCCGGCACAGCCTGTGTACAACACACGTAAGGACTGATAGTGGCGGCTTCGT
CGGTAAGGGGGCCACCTATGCGGCGTAGGATTTGCATGCAGGAGGAATGCTTCCAGTCAC
ATGACACCAACTGGAGGCTGCCACGCGTGTGGTACCCCGCCGTAGAGGATTGTACGCTCC
TCGGGTCTCCGGAATTCCTAGGCCTCCATTGAATGTAAACACCGCCAGACTTCTCAAGCA
CGCATTAGAGACCCCATTAGTCGGAGCAGACTGATATACTGAAGAATTAGGCCTGCGAAA
GGTCTTTGCACCACCCGCTGTACACTTGTGGATCGGACATATACTGCAACCTAAATTTCT
CGTTCTGAATCCGATTCTGAACCTGGGTTAGCGTAACGGCCTTTTCTGTGCCGCGCAGGA
TACACACCTCAGCTTCATAAGAGTGGCCATACCGGATAACCAGGTGGTCAGTGGACACAG
ACCAAATGCAGCCAGTAAGAAACGAATAGCCCTTTGTGACCGAGAGTTTTGAACAGAGCC
TACAGCCCTGCGGTGTCATACGCTAACGCGGCGTGGCCGAACCCGTACTTTAACTAATTT
CATCTCCAGGAGAAACCCGGAACATATAACCCTGGGCTTCGTGGATTCGTGCAACCTTCT
CCCTAAGTTCACCGGTGCGATTACACAT
>Rosalind_6730
GTTACCTTTCAACGTGACTCAAGGTCGGCCCTTCTAACGCTTCGACTTTTGAATTAGATG
CCTCGAAGGTGGCACAACCCACACATAACCCATCGGCGCTACACCGTCCTCCCCTTTTGA
GTAGAGGTGGACATATGTGACTGCAACTTGCTAACTCCCTGAGAGCTTCCGCCACAACCC
AGATATAACATAATCACTATGGCACAGATCCAGCTTACACTCCTTGACATGACTTATACC
TACGGTAAGAACGACTGTCTGTTAAGCTCTCCCTAACTACAGTTGGAACCGGCGTCTCGC
CTATACTACGCGTGAACACCCGCAAGAGCGTGTGTCAGGTATCATGATCTGTTCCCATTC
GCGGAGGCACTGGGTTTGACCCCTATGGTCAAGTCGCCGGTTCAAAACCGACATGGCTGT
AGTGTCGGCAAAGCCGAGCCGGCTCGCGGGGTTCGGGGAGACGGTATATTCTCATTTCTG
TATCAGGGCACTTTGAGACTCTGAGGCTGATGTTTAAGGACGAGTCCTGCGCTCCAATTC
ACGAAGATCCCTTAGATCCATACAGCTGCCACGAAAGGATGTGGTATCTATCGAGAAGCC
ACTGATCGGCGCCTTGTGACAACAAGACAGATATGAGGTCTTTTAGGGCCCGGGGTCGCC
CGACCCGTTGAGATGCACCGTATTAGGGGAAGCAGCATTCCTTAATCTAGGCCCTCCCGT
ACTCGCAAACTGCGACTTAGGGAATGTTGCGGTAAATAAAAATTTATTGTCATCACACCC
CCGTCCCTTTATCTCCGTCTATTTTCACTACTCTACGGATGTCTTTTTAAATACGCGGCG
AAAATGGAGGCCAACTCGCAACAGTGCTTATCGCTAC
>Rosalind_0774
TCTACTGAAGTGCTTTAGCCACCTTAGATGAGGGCACCCCTCTAAATTTCCTACATAAGC
GTGACTGTTCGATCCGGAAGGCTAACATGACGCTGGTTATATATGGTTTTTTGTTACTGG
TCGGAGCGCGGGGCGTTGCTAGTAGCCTCATTATTAGAGCGAGACTACAGGAGTGAGTGA
ACGGATGAATTCTATTACGCTTTTCAGCTGGCCGTCGTACAAGATCTATGCGTAACGTAC
AATGCCTCGGGCACAAGGTAGGGACGAGCAACGACGTTCAGAATTTAGGGTCTGAGATAG
CGTCACGCAGGTTACTTTAGTACGTCAATTGCGCTCGACGAGCCACGTCGGGATCTGAAA
CCACTAGCAAATCGAATGAGAGGCCGATAGCAGCGGGGAGGGTGCGGAGACGGCCAAACC
GCTTATACACATAGTGTCAATTTCTCATTATCCAACGCACCGAACGCACTGGTATGCCGA
GGGGCACCGACGTCACAAACAAGGCTATGGGTAGGTCAGTCTGTTATTGCTACGAGACTG
ATATCTCGCACGGCTTAAATCATAGGATGCCATAAATTCACTGCCTGTCTCCCGGGACCG
CGCAAAATGTACATTAAAAACGAGACCGTGGTTAGAGTAGCGGCCCGCTCTTAGCTATCC
GAAAGCGGGGGCAAGTCCATTCCAGCTAGCTCCTCTAACAAGGTTTGTGTCTCGTTCTTG
ACTGAAGCAGTGTCCGGTTCGTTCTAGTCCAATACACGCTTCTCTGGTTGTGTTGACGCT
TATGCGCTCTCGCCCTGGGTGTACGCTACCGGTCCCTCCTCTTAACCCACCATCAAGATC
CCGCCTTGATAGTCAGAGATGCTTAATCACTTAGAGACCGGATCTAAGCGCATACGATGC
TTTCTACCCTTCCCAACAAAT
>Rosalind_4416
CAGCATTAAGACTGTACGCAGATGCTGGACCTTGAACTCTAAAACTTCGGTACGTTCCCA
AGGTACCCTGCAAATTCGCTACGGTGTAACATCGCGGTATTATCAAAGCACGTCGAGACG
TAATATACGGCGAAGGACAAAACCTCAGGCTATTGCTACGGAAGGATAAGTTAAGTGCAA
TGGTTCCCCACAATGTTAAACACAATCTCCCCCCTAGACATGATTCCATGAATACGCGCC
ATTACTATTGTGTTGGAGTGGAGGTAGGGTAAGGCTCACGCTGATTGTTCCAGTATATCG
CCTTCAGTGGTCGTAAAATCTTATAACACTCCAAGTGCACGGAAACGAAGGGACTCTGCA
ACAGATGAACCTCGGCAAGCGTCCCTAGGAAGCGAAAACTGATCCAGAAATCCGGTGTGT
GAGCCGAGTAGCCAAGTCATCAACGAGACCCAAGTGCGTGAACACAGATCTGAATGGACG
TTGGTACGACCTTTAACATAGATAACTTACCCTTAGAAACAATGAGAGCATTAACTGAGA
CATACACGCCGACAGTGGGGTACGCTCCCACCTTTGGGATGAACAGTGCCTCGGCAGTGA
AACCTGTCGGATTGTTTGAGCAGCAGGCTACATATGAGCATAACATAGTAGTAGATTACA
CAGTTCCGTTCAGTCGCATCCCCCTGTTCTCAGAGTCCCACCAAAGCACAGGAACAAGGA
TGTCCCTCTCCTCCCAAATCGATCGGTGTGTACCCTGCGACAAGGTACCACCGACATGTC
AACTTCTTAAAAGCCATTTCAC
>Rosalind_1026
CCTAAATAGTACATTTCTTGCCTGAATGACTATTGGCTTTGAATTGCTCAGACGATGGAA
CCCAATTCGGCTGGCCAGGTTCCATAAGCGCGTGTCCCAAAAGAAGCCACTATAAGCTAG
CACGGGTTCTCGAAACCTGATGAGTAAATTGACTATGGCAAAGCCACTTAGGCGAAGCAT
CGCTGAATGCTTAATGCCATCTGCTTATAAGGGATTTAGAAAACAACTTTCCTCGAGACT
CAGGCGGGTCTCAGAAGGATACCATTAGGATCAGCATCCATGCGGACGAAACGACAGACG
AGACGGCATTGAAGGACCACACATGTGTACCCCGGACTTACTCGGGAGCTATTTTCCAGA
AGATCTTAGGAAGTGTCCGGCGGGAAAGAATGTTTCGCCTTGGCCATAAGAGTCATCCGC
GGTTTGCATAGCGTGTGTACAACTTATATGAGGATTGGCGATTACGAGGACCCACAAACC
GCAACGTTACCCGGGTGTGCCCTTCAGCGGATATTTCTGGGTGATCTACAAGTACTTAAC
TTCACTTGTTCTCCAGTCTGGATTTAGATATTATCCCAACCTGTCCGCCCCGCAATAGTG
TAGGGTTGATTTCGCTATACGGTTTCAAAAACTGTACAGGTTGTGTACTAAGCGTTCCCA
AGCGGTGTATAATTAAGCGGGAGCAACAACTGAGCATATGGTGCTCCTCTGGTGAGAGCC
ATAATCCGAGTTATAGATCTGATTCAATTGTACACCCCGTAGCTTGTGAGTTGTATTGCG
TCTACTTCGAGGGCCGCATCATGGAATATAGAATACTTCGGTGTCCCCCAAAGTGGGTTG
TCGGTCTCATCAAATACGTGTTCTGCGGTAGGTAAAAGAACTTACACCAATTCTTTCGTC
CCATCGCTTTCACTATTGTAAATATGCAAGCAAAATTAC
>Rosalind_9343
CCCAACACCCTTGCCCCATACTGGACCACCCAGCGGCATGCCCGGGAACTCCTAGGTTGA
ATTCTTCCTTGCGGCTCGTCTCGATTGGACACGTGGCCGTAGGAATAGTCGTTTCGCGTT
GAAACACCCAGTTATGGAGTATAACGTAACCCAGGCCGTTCTCACTAGACGGGGAGAACC
TGTGAAGCAGCTTATGGAACCAAATGTTTCCGTCCTCCGACCTGGCCCATGCTTGGTTGT
GAGTCTTACTATGGGTAGCAGTCACGTTGTATGACTTCACCTTCCTCGCTATGAGCCATT
GCGCCCTCCTGTCGGAGAGATCAGCTATCAGTGCACGCAAGTCCCAAAGTTATGGATGGT
GATTCAAAAGGGAGCAAATGGATGAATGCTTAGAGGGTCCCTGCCATCTAGAAGAAGTCA
TCCTTAAATAAGAAGTACACGGCCAACTTGTTAGTAACCGAGATCTGAGACCTAATGAAG
AGGATATCTTACGGCTTCTGGTGCTTCCTCTCGTGCCTAGTTGTCCCCGCCCCCCGACCC
GACCCTGGATGAGGATATCGTGATCGCGTCCATTGCTGAAGAAGTGTACGCGAGGTTTGC
ATGGCAGGGTTGCAAACTTGCCGGACCAACACGAATCCCCAGATCAGGATCGTCCAGCAA
ATTACTCCCTAACGCTCACTCATTTATGTAACTCAGCACTGGCCCCTCTCCCCTCAAGAC
TAGATTAGGGCATTGCTCTTCTTTGTTACATAGACTATGAACGACACGTTTCAAGATGGC
TCACGAGGAGCCCATCCTTTATCTCGCTGCAGTCGTACTAGATGAGGTACTCCGTACAAC
AGCGTACGATTCATACGTACCCGCACCCGTCACAGTGGTAGGCATCTCCA
>Rosalind_6533
GTGCCAACAGGAGATAGGGGGTGCCAAGTGGTCGGGCCATGTCTCTTTCCATCAACGAGC
TACAGTGTACCTGGGACTATACCTTCAGGTCTTTTCAATGGGCGTCGTCGTGAACCACGG
GTGCGAAGGGTGACAGGAATTTTACTGTTAATTTTCGGTATTGCGATTCCTGGACATGGT
CTCTGATCTTTATTGTAATTATAATCCTCAACGACTGGTCCGTATGTGGTTCGCTAAGCA
CTACTGGCCCATAGAGTGGATACGCAGCCGTCCTGTCTTGCTCCAAAACGCAAAATTGCG
TTTCTCCGCCGACATACCTCTCAGGCTGATTTACTGTGCCAAGTCTCGGCCGCTCAGATC
TTGATGGCCAAGATGTCGAGAAATTCCGACTGACATTTCATTAGACATCCAGGAGTCCCC
CCTCGTTTGACCCCGCTCATTTAATGTGTACGCTCCAACAAGGGGTTCTACCTGTCTCGG
CAATCAGTCCTCGGGGCGTCTAGCATCAAGACAGTCGGCACCAGTGTGTCTATCCCGGTG
TACGCCTATTATATCGAGATGTGACTGTAATAGTGTCGACTCTTGGGGACAATATCTTGA
GATTGCCAAAGCGGCCAGGGCACCCCCCCGGGTACATGGACGTAGAGGATAGCAGGACCA
AATATGCAGAACTAGTCTAGTGGAGAGGAAATGTTCCAAAGAACGGCTGAAACGACCATG
TCGGCATGGGGTAACAGTTGTACCGCCGAGTTTGCCCTGGGTGCCGGGACGAGCCCACTA
TCAACGAGCTTCGGCGTGAATTAGATCGCCGGACCTCTTGTGGCCCCCCGGGCACTAAAC
ATCGATGGTA
>Rosalind_9581
TCCCCGACCGACGGTATTAATTGTCTACTCGGGGTGAACGGAGAGACCTAAAAGAGTAGC
GTGCCCGATATATTGTCGAGAGCCTGGGATAGGCTCCAGCTGACCTTATTACGAAAATAC
TATTATCAGAACATGTCAATGTCTGGGACGGAGAGGCCCAGAGTATCGTCTTGCGCCCAA
TCCTGAGTTATTTGCCTACCCGGCCGAGATTAACGGGGCTAGACTCTCGGCGCCCTATAC
TAGAATTCGCTGGGGAGAGAATCACTCCCGGCACCCTACCGCTAGTACACGCTCATTTTT
CACGCACATCTTAGTCGTGACTCCTGTGGGAAACACCAGGGCATTGGAGGACCTGGGAGC
AACTTTAAGTTCCGATCTACAGACTATTCAGCATGTACACCAGTATGTTGAATAGACACG
ACATCAAAAACCTAGATATCAGAGCTAGCCTACCCCCCGTGTGGGGCCCTATATTGGCAT
TCGCGTCCCAGTTTGACTGCTACTCACAACAGTCTTGTGATCAATGGCCAGAGCTCTGGT
AATACACAAGCCAGCGCCGCACAGTAGTGCACGCGGTTGCAGGAATCTACCGCTCTCGAT
CCCGGATATACACGGCAGGTGAAATCATCCATGGAATCCGACTTTCCCAACGTGATCGTT
CCCGGATCCCTCCATTACTACACCAATCCCAACTTAAGCAAAGACCTCCATGACAATTTC
GCAGTACTGGCGACGCAAGTTTTTCGCAGGTGGCTCACCCTGTTCCAGAAAGGCCGTGCC
CTTTGGGTACGACGCCGGTTGATAAGTAGGCCTGGGATTTTCGCTCGCAGGAAAGATCAA
AAAAGGGGCGCTCGTCAACGTGACCAACACCGGCGGCATGCACGTAGGGTACGACATAAC
GGCGGAGGTTAGAAATGAGGCAGCTCATTAATCACAGCCTGCCTTCGATGTATA
>Rosalind_5175
CCCTACTGCTCTGCAAAGGCGCAAGAATTCGACAACACAACTTTGGGTCTGCGACGCGAG
CTCAAGGACCATGAACCCGTTAGGTTACTATACGGTGCGACGCAGAGCGCTGACCCACCC
AGTAGGTGATAAGGTTATTGCATGTGCGTCTCTCTCAAACCGAAGTTACAATCGCTTATT
AAGAACTTTCAGCGCCGGACGATAATAATGTGGTTTGGGGCTGTGTGCGTGATCCTTTCT
CCTCAGTTCGGGGGCCTGTCTTATCAACTGGAGCACTTGGCCGTATCTGCAAGCGGGTGT
GGGGACGGTAAGTAAGGGTGAAGTAGGAAAGCGCGTGCTTAGGCCCTCTCAAGTATTGCG
CTCCCCATACTTCCCCTACTGAAGGGCGCTACGTGGTTTTGGCTAGGCACCTGGGCTGCT
GACCTGGTTTCGTGCGATATGGGAAAAATATGGAGTAGAATTTCAATCGCAATCTATGTG
TCTGCATTGTTGGGTGCTGTCCCGCTTCACAATATCCCGGCTCTCGAGATGGCAGTTGTT
TTGTAACGGCCCTTAGAAGTACTGAGACGTTTCATCGTTCTTTTCCCGTCAGGTGGGAAG
CGAGGCGCCAGTGTAATCTTTATTACTTCAACCGCAGACCGAAGGCGGTGGCAACGGCAG
GGGTAGCTGTCTGTGTACAAGCGAGGAGTAAATTACCGTCCTGTGCCATCGCGACAGGTA
CAATAGTAGGAACTCACCGTGTAGTATCCGTCACGTACGAAATCAACTAGGAACGAAGTG
CCCGGCGAGCGTTATTCTCAACCTTACCGTAATTTCCACGGTGCGTCGAAAAGTCTAAGG
CAGCGGTTTGCTCGATTAGCGCCCAACCGAATGATTATAAGGGTGATCGCAG
"""

print(rosalind_seq)

fasta_dict = {}

current_header =  None

for line in rosalind_seq.strip().split("\n"):
    if line.startswith(">"):
        current_header = line[1:]
        fasta_dict[current_header] = "" 
    else:
        fasta_dict[current_header] += line.strip()

print(fasta_dict)

def calculate_gc_content(sequence):
    g_count = sequence.count('G')
    c_count = sequence.count('C')
    return ((g_count + c_count)/len(sequence))*100 if sequence else 0

for header, sequence in fasta_dict.items():
    gc_content = calculate_gc_content(sequence)
    print(f"{header}: {gc_content:.6f}%")



seq2_fasta = """>Rosalind_3663
GCTCTGGAGATTATGGGCCTTAGCATAGTCCGAAAGATGGTATGTTCTAAGAATTTCGCC
AAACTAACGACGTATCATCCTTAGTTGCATTAGCCTCTCTCGTGCCGCCGGCCGGTCCCT
TATCTCAAGCGGCCCAGCGGACAACCACTTGAGCTAAAAGTCCACCTTGTACAAGACCGG
GACCGATAGAGTGTAAATTGTGGCAGTGACTAGTGCAAGGCATTGCCTTTTAGCTGAAGT
TACCTCATTGATTGGGCATATCTCCAATATCGAACATGAGTAAGCGCCTTTGGGGATGGC
GCCAATGATGTCCAACCCACTCGGTCCTGAGTAGGTGTGTAGGGCAGCGCCTCTAGTCCA
CACACGGTGGAGAGCTCCGTCCGTCGACGGTATGTGTCTGTCGTACCGATACTTCTAACA
CGCTGTGCCCAGATTTCGTTACTCTGCGGTAGTAGTCAATCGGAGGTAAACAGATGGGTA
CGCCTAGCTACATGCGTCAGGTGAATAACTCTCTGCGTTTCAGTGCGTGTCTAACGTGGT
TTTAACCTCGGGATGGCCCCTATCTTTGTCCAGAAAGTATGCGATATGACGTGTGTGGTG
TTAGTACAGTTCTATGCCATCCTATCGTACTGAACTTATTTTCCACATCACGCTCATTCT
ACCGCCCGACGGAGTCACTCTCACGCCCTCTTGCGCCCGCATCACAAGAAAAATTGCGAT
CGATAAAATTGGCAGCTAAACGCCGTCCACCGGCCGGACTCTGATGACTTCGTTCAACAC
TCTTACTTGGGACGAGTATCGGTGTACGTCCAAGCTGGCTGTAGCAGTTTGGTGCGGCGC
TTGACTAAAATTCTCTTTACGCGTGTGTCACACGTGACACTCTCG
>Rosalind_5108
ACCCTGTCCGACTCGATTGGGTAGCTAATTGTAGTTTCTACATTGTTTACCGAACAATTC
GCACAGTGTGATAGTCTGAATGTTGGCGTGGCATCTTTAGTGAATCCTTTCTGCTGTACG
GTGCAATTTCTGGGGTCAAGTACGGACCCGTTTATGCGCTTAAGCAGAAGCCCGCGGTTA
CAAGTCAACATAGCGTATACACTAGGGCTTGAGGTTAACATGATATGTGACTGGTAACTT
TCATCCACAACACCCATGCTTTAGAACCAAGCTTAGCTTTAGCCTCTGGTGGATCATATT
ACTTCGAAGCTCCAAGCTCGGACACGTACCGCAAACCTAGTGTGCACAGCGTTCTAATAG
TCACTAAAAACTCCGCGAAATGACGATAACCTGGCACTAGACGGCTCATCGCCAATCCAC
GGTTCCTTACCTGTGATCCTGGAACGTGGCCAGGACGTTCTCCTACGCTCGGCACTGGAG
ATAACGATTTGAGGCATGTTATATCCCTAGGATCAAAAAGAGTTGCTCTAGACTTAAGTC
TCCTATTAACACGATAGGTGATGGTCATGCAAAGACACAGACCGCGAGTGCGAGACTGGC
ATATGCTGTCTTTAAAATACCTATCATCCAAGTAGACGTGATTACCTCTTGTTCGTCATC
CTCATACCGTCGGCTTGTAGTCAAAGATGGAGGGGCCCACAAACGCGACGACTCCTGTCT
TGGGCGTTGATATAGAAAGTAATGTAGCCGATGCGGTGTCTCGTTTCTATCGGAGTGTTC
ATGTATTGAACACGCGCAGGGTTCACTTCTTGCCTTGTCCACTTACTGGTGGGTGAGGCA
CAAACTGCTGCCAATGCTCGTGTGGGCAAGACTATGGGGAGCCACCTTGTTCGTGTTACC
GTCGTGCGTATTACCGAATCACACGCCCTACGCCCGGACGCACACGACTCCGATCAGCTA
GAGGAGGGCTAAAACACGGCCACTAC
>Rosalind_1927
ATTCGTCACCCGAGGCGTGGTCTATGGACCGAGCAGTAACAAGGAGTGCCGAGGTAAGCG
GATCTTAGACGGCTGAACCCCCGGTCCAAGCCGCCCTTAGCGCCTAGCGTGAGCCCTTTC
GATAAGAGTGAACAAAATGACCTTTGGAACGGGATCTCCGGCGAATTCAACACGGGTGCA
CTCGCTGAATGTGGATCGATCCGTACCTATTGGATTTAATGCGTGCATCGGTTGGGGGCT
ACGAGTTCCTAGGACAGAGCAGACGTCTGTTCTTTGATGATCATTTACCAGTCGCAACTA
GCACGTCATGTCAACCGCTGAGCCCTTGGTACTGCAGACATTCATCAAAAATCGTACGCT
GTCAGACCTTCCGCGCAGCGCTCTGTCGCATCCCCATCCGGTGTGCACCGGTCGGGAGGA
GCTTGCTAATGACGTGGGGCGTAGTTACGACCTTAATCCCCTCGACTACACCTGCATCCC
CGAGGCACCAAGACAAATGCGTGTGCGCATAAATGCGATTGATATCCGCTCAGGCAGAAT
CCGACGCCTTTTATAATACTTTTCTGCGCCTCAAAAAGAGGGTGACCCCCCTGCAAGGTG
TATCGAATTAAGTCAGCGAAAATGTTTATGGGGACATCAGCACGGCCGATATAAAGTATA
ATTGAACCAGCCGTCGCATAAAGAAAAGAGAGGCCGTACTCTACTAAACTCGCCCGTATT
GGTGTAGGGCTTCACCTTTGCCACTAAAGTGAAGACTGGGAGAGAGAATAATACCACCGA
TTTGTGGGCCGTGGGATGCATGGTTGCGGCTAGTTGTCTCGTTGGATCTCCTAACCCTGA
GGTCGTCCTAACGATCGATTTTTGCACAAATCGACGCGACTTCCGTATATTCTATATTTG
ACGGACAATTGGTGGCAAACGCGCTTTCCCATTTTGTAGTGCCTAGTTTTATGCGGCCGC
CCGTGAATCTTTCGGACCGCCGTTCCCTCGTCTTGTTAG
>Rosalind_0663
CCACCGCAAGCAGTTATTCCGAGACATGAAATAAGAATATTACCGTAAACCATCACCTTG
TAACTGCGAACATTTCATTCATTGCGACTTAAATTGGAAACCACCTTCGCCGGTCCCAAA
ATCTACGTCCGTAGTAGGCAAGTGAACAGAGTTATGTGTCCCTCGGGACAGATTCGTGTA
ACTAAAGTCGTGTTAAGGTTACCTATTCTACGCGTGTGCTTAGAAATCACAGACACAGGC
AAACGTAGCATGACCCCTTAACGCCGCCCGAGGGCGACGCACATGCACGCGAGCTAAAAT
AGTAGCTCACTGGCGCAATTAGACTCCGTTATTCCCCCATGGGATACGGACGATAAACTA
TCGGCGAGTTAAGTCGTAGCTGCTGTTCCACGGTAAACCAAACAAGAGTCACAGACACCC
TAATACAGGATACACCCTACCATTGTGAGAAGATTCTCCGCTGGCCAGGCTCTACTAGCA
CATCTCAATTTCGTCCATACGACGACTTTGACTTCCCTCCTTCGCCATGTACCAAGTCTG
TCGTTCGGCGTTATGTTCCTACTGGGTCCAAGGGAATCCGGCTAACGTGTGTACCAAGCC
CGTGATCAGGGCTTCTATTACTCTCATTGAATGTAAGGTAGTGGTGAATATAACCGGCGT
TCACTCCTCTTTTACTTCCGCATGACACACGATAGAGGCCTCTACCGAACGCCTACTTAC
TCTACGAAATCCATAACTGGCAAGCCCTTTAAAGACTACCCAACTAGACATTCTGTCAGA
GGGCGCGGCATGCACGACGGCAGTAAGCACAGTACCGTTACATGGGTACGCTGTCCCGTG
CAGGCAGGATCAAGGGT
>Rosalind_1788
GCTACCCTCAGAAAAGCGAAGAAAGTCCGTACTACAACCGGCGGAATTCTCACTTGCGCA
TTCACGTCCCGTTGTGCTAACAAATAGTCTTGACGCATTTCTGCTAGGTGATCCAACACC
GGAACGTCGAGATTGTGTCTCAGCTTAGTGAACGACTCTAAGGTTCAATAAAAAATTGGG
CGATTTTTTGTAGCGAAAAGAAGGCTATGACCGCCTACAACGAGAACGACTCGTTATCGC
TTTAAATGTCTCCGGGGACAATACTCTTAGTGAATAGACGACTGATGTACGTTCTCTGCG
TTGCAGTCTAACGCGTGGGCACCCTCAGGCGAATAGACATGTATTGCCCGGTGCCCTTTG
ATGCGAGAGCACTTAATTCATTGATATTGTTTTGTATCAACAGTTGTAATCTCCAGACTT
GCTGTCCGAACTTACTCTTATACTATTTGGCCATGCTCTATCACCCGAACATGTTGAGCG
TGACTGGTAACTCTAGAGCTGCTCCTCGTAGCTCGCTCTCGGGGTACGTCGATCAAAAGC
GCGTTAAATCTGGCAATACAGATTCAAGCTAACGTCCCCTAAGCGTCCAAAACCTAATCT
CGGCACTGCGCATTTTGTGAGGGCCATTAGGGCTTGCAACGTCAAGTGGCGCTACCTGCA
ATGCTAACTAGATAGATTCGTGGCGTCGAATTCAGCGCTCTGGCAACCTTAAAAAAAATA
GATGGTGTGCGAGCCCGCCGCGGTCTAAGTCTTATATGTCTTACTGGGTATAGAGTTGAT
CTCTTATGTGTTCTCGGGATCTGTGCGCGGAGA
>Rosalind_8751
CTCGACTACTATCGCGATTAGAGAGTCCGCAGGTCACCTTGTTTCAGTTCCTCCGGGTAG
TTACGGACCGAGAAAAGACCGAGCTATAGGCGTCAGTAATATCGCCAGCCGTGCACGATA
CGACGTGCGTGCACGCTCGAGGATCATGTGACCAATGACTCTTGTACGTTCTCTCCTAGC
GATCGAAAGTGGCAAGAATAAAAGTCCCCTGTTTCCGTCTAAATTTCCTCTATCTGGGTC
ACTTTGTACTCTGTGCGAAACGGGTAGAATTATTCATCGCGTGGTAAACGAGCAACATGG
GAGGTAGCTAACATATCACGATCATCGTCTCACATGAGAAAATTAAACAGCCTATTGAGC
GGTTGGACTTGAGGCATCCTATTGGCGCAATGTGGCTGCACCGTATTCTGATTCCACTCC
CGCCTTGTTATGTGGGCCCGTTAGAAGTCCGTGAGAGCAGCTGGATGTCAGACTATATAA
CAACGGGCATTGGTTCGATCTGCTAGATACCCCCTAGTCATGCACTGGACGTCGTTTGCG
GTAAAGATGCGCTGGGACAGAGCTAAAGGCGGACAAAAGGCGCCGAAAAGACGTAGTCGG
TAAGGTCATATCTGGGGAAAACTTTTGCACCCTAATATGCGCTGAGAATCCATTTTTCCT
TCGTTGGTATCTCTCTCTGGATGTTGCTTGTACTTGCGCGCACGCTGAACCCACCTCCGC
ACTTAACCTGGTTTCATTAAAAATCGCCCTCAGTTGGCCAAAGTCTGTCCATGGACGTAG
GCTAGGGGAGGTTTCTACCGAGTCTCTAGAGAGTCAAGCGGAGGGTATACCCTACTATAC
GCTGACACTCCGTCCTCGAAGCGTGTATGCATAAGACATGCGGCGCTGTGGCAACTGGAC
GGGGTTGTGGGTGTGACGGAGAAAGCGCCCCGGTTAGAATGTCGGGACAAGCATCGCGTT
GCGTCTACCACTCGCATCTT
>Rosalind_4537
AACTTAACAAGAACCATAAACGTTGCAATTCCTCCGCCTGGGGATCGAACCGGCCATAAT
CATACTTGTCCACTGTCGACAATGTCGAAATGACAAATCCCTCTATAGACGACACAGCTC
CGTGTTTGGGATCCGCAAGTCTACGCTTAGTAGTAAAGGCTTTACATGGTTTGCGTATGG
TCTTATTCGAACCATGATGAGAGACTAAGCTAGGATCCGAACTTCGGCGAAAGGTTCGAT
CACCCACATTTGCCCTAGAGTAGCCGCGATCGACTTAAGGGCCGAGCAAGATTTAATTTC
GAAATTATCTTAGTATTGAAAAGCCGCATGAACAAGGAGTGGAGCATACAGACCGCTGAC
GATTATCTGCATGAGTTCACCAGTTGAGTTGTGGGTCATACGAGCAAACGCTGGGCACAC
CAGGCGGGTTCCAGGTTTGACTGTCGGGGCCATGGTGGAATCTTTGAAACGGAGCCACCT
ATTCAATGGAGGGACACTTGAGACCGACGACTGCGAGTGCTTTCAACGAGATCTGACCCC
TGCCCCTAACTATGGTGTTATGTTCTGTAGGTGCCCTGTCTATTGCTAATAAATAGGATC
CAATCCCTCGGACCTGCTGTCGACACACCCTGCGCTAGATAGGCGTTGGTATTGGAGTAA
CTAAAGCTTTACCAAGCGCCTGAGGCAGGCAGTTGATAACCCTGGTGACTTTCGTGGTCG
CCCCCTCTTACAAAGGGACCCTTCGCACCGGTGAGGGCGTTGGTGATGCTGGTGCCTTAG
GGGTGGAATGGCCGCGAGATAGGGTACCATCGACATACCACCCTGACGAA
>Rosalind_6439
GCATGGCGGCGCACCCGAACGTTCGCATCCAATCCTCTCATTCCCCCGACGAGTATGCAC
GAATCCGCCGATAGAGTGACGAACACTAGTCTCTAATCCGCACTCCCGCCGTGGGGGTTG
TAAGACCTAACATTACTGTCAACTCAAAGTTATGAGACAAGGCAAGAGGCGAGCGAACCC
CACTGATTCACTCTTAGCAGTAGACAGCCATTAAAAAAATTCAGAAAAGTACGCCCCTGG
TTGCGCGCATCAACTTTCAACTAAAGGGGCACCAAAACGGTAACCAGTCTTTTGGGCTTC
CTTTATGTACATCGCCCCAAGTTTTAAATAACTGGCCTGCTATAGATTTGAACCAAAGAA
GGCATTCATCTCCTTCGACAATTAGTGCTTTGGCGAACACCATTGACAAAATAGTTTTAC
CGACGTATTGGCTTCCCTAAGAGGACCGCTACTTATACCAAGCTATGCAGGTTTAGGGTC
AATAATGGGCTCCATAACATACCGAGGTTAGCCCTACCGCATCAAGACAGGCCGACTACG
ATCCGTCTCTTTACGGTGCCGGATGAGGGAGCCACCATCAACATCCTCATGTAGCCTCAC
TTTCTTGAGCTATGCTTGCATCTTCATGGGGAACGTCGTCGGCGGCCCCATTGCGGTTCA
AAGGAGAAAACGCAACATAGCTGACACACCACAACTGAACCCGTCATAGACTGGCCAGCC
ATAATTTCTAGCATCGATGCATAGTCCCCATAAGACATCGTACGACTATGCGACCTTGCG
CGCCGTATGACCGGCGGTGAATAGTTACCAGTTTTGAGGGACCCATACTA
>Rosalind_5261
CGTAAGAGGCATCTAGCGCGCATGCATTGGGACACGTTGAAATGGTGGCGTATACCGGCA
ACAGACCGCCTGAACATAACTAAGACTACAAACTTAGTGGAATATGAGTTAACGACTACT
CCTCGGTTAGTCGGCAAAGTGGAAGCATCATAACATTATACAGCAGGCTCGACCAGTTAT
GACCAGAGTGAACCTGTGGATGCTCTACCAAGTTCGGGGTTCTTGCGTTGAGAGTTTGAG
TCTTTCACAGAGGGCCTCCCCCAACCGAACTTTGTGCGCTCCCTTTCTGCGAACTAACAT
ATAGCAATCTGAGCCGCCAGCAGTAGCTTACTAAAAACTACGCCAATTCTTGAGCATGCC
GTGACCTCGTAACTGCGGTAGCGAAACGCCAATCTTGGAGGATGATAGGACAACCCCCTG
TTTTCGCCGGTCTACCCCAACACCTCTGCGGAGGTTAGCTAATCTACTAAATCGTAGAAG
GGACCCATCTTAGCAGTAAAGATCGCACCTCCTAACTTCACAGACCAACAGCAGTCGGGC
CTTAACCTGAAAAGCCTTTCATAGGTCGCTGGTGCGGACTCCCCTAGGAGATTACACAAG
AGAGAGTTAACGCTTAAGGTCTGTCGTCTGTTCTCAGCTTGATCGACTTGTATTCCATAC
AAGCTAAGGGCCAAGGCACCGGATGACAAACTTACTCCCCCCCCCGTGTCGGCTTCTTCT
GGGGCGGGTTGTCGAGTGCTGACGCGGGACTCTAACACGGTTCGCCCCGTTTCGATGTTC
AGGCGCCTGTACGACTAGTGCCCAGACAATAAACTTCATGGGGCATGAATGCTGACATTC
GCTGTTAATGTGGGTGAGTGGTTAAGCATATGGCCGGTGTGGATCTGTAAAAGATCCGTC
TGATGGTCTCTTCTAC
>Rosalind_3090
TACAGATGCCCCCACGGGGACTGGTTCTCTACCGGTTGCAGGACGTTCACAAGTTGCGAT
TGTCCGACGCGGCATGAACTGCCAAACCCCGGTAGTCTAAGCACACTTGACGACCTACCG
TTCGCGCCATGGGAAGCGCGCAGTGGTTCTTGACTGGTATCAATACATAGTATGTGGAGG
ATGAGTGAGCCCTGACGGCCCGTCCTGTTATGATTCACCCCCCCATCTTGCCTGGCCGTT
CTTTGCGTCCCTATTGACTAAGACCATGCAAGAATAGAGTACGATAAGGGTTATAGCAAG
GTATCGATCACACGGATGGGGCTTTACGCAGCTCCCTGTTTAAGTATAATAAGTCCGCTG
TCAACCCTCGACGTACGTGTTCCAAAGCATGTCCCTCAACTCCGGGGTCTCTTGTAGGTC
TATATACGTATATACTTGAGTGGGAGCTAATCTTTTCGTGTCCAGTTCAGACCTGGGGCG
GGGGCAACAACATCGCCACGTAGTGTTTGGATACGTTTTGCTTATACTTGCAGGATTAAG
CGCAAGAGACACTAGAGGCAGACAGTAATTTTCCTGACCGCTAAAAAGAAGGCCCGATAT
GTAGAATGTATGATGGAGCCTTCAGTTATTAATATGCATCCTCTCTGGCGGTTTAGAAGT
TTCGGTCCTCAGTAAACGAGGGGACACACCAAAACGCAGATCCGCCGCTGCAGTATAAGT
ACGAGGGGACCCTAGCAGCGATCGCATTGCAGAGCTGCGTACCCTATAACCGACACCGGC
AATGATTCGAGGATGAGTCGTTAACAACAAGGGTGCCATACGTTTGTCTAACGCGCAGAC
ATTCAGCAGTTTTTAGA
"""


for line in seq2_fasta.strip().split("\n"):
    if line.startswith(">"):
        current_header = line[1:]
        fasta_dict[current_header] = "" 
    else:
        fasta_dict[current_header] += line.strip()

print(fasta_dict)



seq3_fasta = """>Rosalind_1287
AGTTAGGTATGAAGGCCTCTAGCTATATGATCGCTACCCAGCATATCGCGATTTAGTTGC
CTAGGTGCCACTATACAGCGTCGACGCGTCCCCACTAGCGAGTCAGCACCCTGAGAACGT
ATCCCGGAAACTCGTACTGACTCTCGCAACCCGATTATTCTGTACCCGATAGTAAGAAAC
CAAAAGACCGAGGGACTTGAGCTGTATGTAATAGGGCCGTGGCCGTCCGGTATGTAGGTG
CTTGTGGGGCGAGGAAGTGTATCGGCTATCCGCTTATAATTTGCATCAGCACCTTAGACG
AGCCCGTGTAGGCCTTCACAAGCGGTCCCTTCGGTCCACCAGTTAAGCCCCGAGCCGCTA
ACTCTTTAACTTCGCTATCTCGCGAGCTCACTCCGCAGATAACCTCTTTCCGGTGGCATG
CAGGGTAATGAATCTTCGAACTCTTATCCGCTTAAATATTCCTACAGGTCGTCAAACGGT
TCCAATACATTTATTGGTTCGCTGCATGTTCTTGAGGCCGCACTGCCGGCCTCTTCTGGA
AGGAAGGCGCCATGCTGTAGCTCCTAAGTTCAGTATTTCTCCCTTGCTTAGGGACCGCAC
AGTTCGGCTGTGGCTCTACCCACCAAGACTGCATATCGTATACCGGGTGGTGTCCAGATG
AGTGTGACTTGGACGTTCAACTAATCCATCACGGGTGCCACGTAATTCTATATCGAAAGT
CGGTAGTACATATTATGGTATCCCATCCCCTGGACCTTGGAGCTAAGCCTACTCCCTCAA
AACTGAGTTTCCTAATCGTTGCGGATA
>Rosalind_3524
CTGATGAGGATACATCTTTCCCCGCCGCGGCACGTTCGGCACTGCGCGTCTGTATGGCTA
TTGGTCATCTCGATAGATAAACGTCGCCTATGAAGATGCGGAGGAGGGTCCCAGGGTCCT
AGGTTGGTTGCGACAGGACGCACGCACTGCAGGATGAGTGGTATCACTATTCGTCCAGGA
ACGCTCTGGTAAACCTACACAATATAATGGGAACGTTTCGCAGGCCCTTTAGTACACTAC
ACGACGGTACCACGGACGACTACGGCAAAATCCTCACAGCACCAGGGTCTCCACCAGTAT
TAACTAGCAGTACCCACTTGAACCACGTTGCCCCCGTTTAATTCACAAGGTCCAGAGTAT
TACGCCAGTAGATCGGAACAACAACTAGTGTGTGAGTTGCTAGGGCACCAACCCTGGTCC
ATCTTGCCCTACACTCCCCAGGAATGTAGGCGCGATCATTTTCTCCATTCTCTTACGACC
ACTAACGCGCCCAGGAATGGACAAAACACATGGCGTTAACGCCAGCACTGATTTTCCTCC
GTTGATACTGGAGGAAAACTCGAAGGAAGCGCTGGTAGAGCCTGTGCGTTAGCCCTGTGT
TGTCCGGCTTACCAATTGCGCGTTACCTGGAATCACCTTGGCTGCATGTTGCGTCGCTAA
TCGTGAGGCAACTTCAGGAGAATGTCCCGGGTATAGCATCCTTGCGAACGCCGCGCCGCC
AGGGGGTAGTCCCGCGGGCGGCCATGGGTGCACTTATGACAGCGCAGCGATCCAGCCCCC
CCTCATCTACCCGGCGTTTTATGCTCGAATTCCAACAACACTAAAGCAGCCCTCGACTAC
AGGGCAGAAGCACCAAGTAAGGATACAGAGACGCTGCGGCCCTACGCAAAGGTCCGCATA
GGCCGAAGTCCAATTAAGTATACAAAAACCCTTACTTGCAGCGCGCATCCCTCCCGCTTA
ACAATCGTTTCCAGAAACCACTG
>Rosalind_9069
TGATTCGGCATTCGTAGGCCTATTATTGGTATGTAACCTGTCCGTACTGAGGTGCCAGGG
ACCTAGAGGTGTAGATGCCGATTAGGGTGATATGAGGTCTAAAATGATACAAACTGTTGG
GCGCCACAATCACAACTAAAGCATACGCGGATATCCGCCCAAAGGTGCTGCGCTACGCAT
CCACGAGTTCGTTAGTAGCCACTCGCCACCTACGGACGCCCCAATCCCGGCTGTGCCCAG
TAGTACGAGGCCGAATTGAGTATCACCGGCTAGAGGCGTGGGTTGCAGCGGGATGGCTCT
ACCAATAAACACCAATTCCGAGAGTGGGGATATAGTACGGTGGCGCTCCGTGATCTGAAA
AGACAGTTTCGCGCATGGTAGGAATTACGCGAGATGAACAGTCCGATGCTAGGAGTACCT
GGTTCGAAATAATACGAGATCATGGCCTATGCACGCGCTGGCTTGAGAAGAGAATAGACT
ACATCCGGATCCGCCTGGCACGAGATAAATACGACGCTCTTACGTATGACGGAATCTCCA
TCAATCTCCCACCCCCTTAGATGAGTAGCAAGATGGACAGATAATATCCACCGAGCTACC
GAGACAGCGGTTATGCGGGTAAAACGTCCCTCAGCTGTTCTAGGCTTAGGAGAAACAGTT
CCACACCACCTTGCCAAGAATGTGGTTACATCTTTCACTGTGTTCACCATTTACAACCTC
GGTAGCTGAACCGGGTGCTGACGTATAGTGTCTAATCAGAGCAACGCGGTCCCAGCCCAC
CGGAACTAAAACGCCTGGAATATCATTGGGCAAATGACTACCTCGTGCCCTTAGCCTTAA
GAC
>Rosalind_1812
TTCTCTCAGCCTCAAACCATATGCTCCTAGTTCTCGGTGTTCTCTTCTAGTACGACGGCT
CCCGGCGACTAATAATGCTTAACGCCTTGAGATGCGCAGATGTGGTTAGCCAGGAAGACA
TGTCGTAGTGGCCTTATTACTTACAAATGATGTCTCAGTGTTACTGGGGACCAATGATAT
AGAGGAGAGAGTGGGGCTGTACGTATCTTAGTAAAGGGCCGATTAACCCACCAGTTTACT
AATAAACTGACTGGATCACGGCTGTGTATCACGAACAGACGGAGTTTCACCTGCTTACGT
ACAATGCGTGCCCATAGAGCATGCGAGGCTGCGTGTGTGACGGGGGGTGGAACGTGGCAT
TAAAAGTCGCGATAAGCGATAGTAACGCTTTATTAACTAGATTTCCACACAAGTTTAAGA
CCTGACTAGCTGGAAATGCCAATTGGTCCGTTCAGAACTTCCAACCGTGGGACAATGTCG
AACAAAGAAAGGTACACGATAAACGGAAGCGGTATGACTTCTTATCCGATCAAGCAAAAC
TGTGCGCGGGAGAGGCACGCTTGTATGGTGCCTCTACATACATTGAAGTTACTGGCTCTA
ATTTAGCTGGCGGTATAAAGGATTGCACACCGTTTAAGCCCGTGGCATCGCGGAGCCTCG
TGTGCTTTTTACACCCGCGCGCTGAAAATCTACTCCCTGGCGAATAGGGACTCGAACAGC
CTAGTATCGTCGACCGTCTTTGACATTGTGTCTGGATCTGATAGCAATCGACTACCGCGA
TGCCCGCAGACTCTCACTCCTCAAGGGCGGGCGCTGCTACTAGCTTAACGCGGGGG
>Rosalind_2934
ACGTTTTCGAAGATATGACAATAAGTCTCTGTCGTCTCACCAATGTTGTCAGCGTTCTAA
AGGAGGAACCCCATGCAAAGGGGTCGCGGTAGCCAAGTCTGCTGTTTCGACGTGGCAGGG
ACTGGTCATAATTTTCCTTGCCTAAGTACGGACACAGATTCTAAGATTATCCTTCTGTCT
CTCCCGATCCCCCCCAATAAGTAACAACCCCATAAGCAGCGGTATATAGACATTCCACGA
TAAACGCGACAATTTGTCTAATTTGATCATTGACCGTCATATGATGAACCAAGATGCCTA
GTCTCTAGTCTCTTAGTTCTAATGACAGTTAATTACGGAAAGTCCCAACTCCCGGGTTAG
GCATATTATAAGAACTAGCCTCCCATCTCCGGTGTGTCCAAGAAGGACAGGTTCCAATCG
TATGCTGCAGAGCGGCCTGTCTGGGAGCTGAGTAGGAAAGGCAGTCCTTCTTTCCCGCTG
GCCCACGACTCAACCGCGTAACCTATAGGTTGTACTCGCCTGGCCTACTGTGACGCAGTA
ATAGCTCCAGACCAATGTTCAAGAGAGCAAGCGCTTACCAGGCCTATACGCGCTAAAACG
AGCAGCGCGGACGCTACGGTCGTAAGGCCGAGTCCCCGTAGCTGAGCTGCAAATTCTGCC
AAAACTTAGGTTGAGTAAGACCTGTAATAAGGGATCTGGATAGCGACACTCGCACATGTG
CTAGCTAGGTCCTGTGCGATTGACAAACTTAACACTTAAGCCCCGGGGAACAAGACATTG
CTCGAGCACCTCTGTTACGTTCAGTTAAATCTCAGATGTGCATTGGGCGTGCGTCTTTAC
TGCCGAAATCAGGCCCCGTACCCATTAACGTATATCAATATGAATACGGCATAAATTAAA
GGGTTTTATGCGCCCGTAAATTATCGCCGCCCAGACATGGAGTTGCTGTGAATCTTACGT
GATCTGCCCGAAGGTGGGCATGGTGAAAAAAAGGG
>Rosalind_2337
CAGTGAATACTACTGGCCGGCCGATGTACCGCCATTACGGGACTATGTGGCGGAACCGCC
CGGGGCTGTCCAGAGATGCGTCGAATACATGAGGGAGTGTGCCAAAACTCGCCTAAACCT
ACAATGGCCTCCACTAGCCTATAGGAGCCACTCACTTACCTCTAAGGCACCGGCTCACGG
AAAATCATCGTTCCTGCTGGTCGATGTAGTACGACACAGGCGAGCACACGAGACTCCATA
CGATGATTGGTGGAAAATTCCCTCTAAAACAGAGGGCCTCTTCGCATTTGGGGCGAACTT
AATTAAGACTGGTCACTCTCCTGGTGTCTCCTAGTTACGCTTCAGAGCCGGGAACGGCTG
GTGTCCGCGGCTCAGGGCAGAGAAGATTTCGCCCAATGATCGCTATATATCACTTCACAT
TTGATTTACCGGCTCGTGTTCTGTGCGCTTCGTGCCTAATATATCCTTGCGAAGTTATGG
GTGGGTGCGAGGTTACCGATAATGTGTGCCTTCTGAGCATCCCACCTGATGCTTGGGAGA
CAGCGTTCAAGTTACAACGCACCTCTCCGAGCTTAGTCTGTCTTCAAGATGTAGCCGACA
ACTTGCAACAGGGATAGGTTTATCCCGGATATTCTTCAAAGAAAAAGACTCCGTAGAGTA
CCAAAAGTAGCTACTACGCTTAGTCTTAACCGCCAAGATATATGCATTGTCGAGTAGCGA
TGCACTCTGTACGTTGCGCATCTGTTGCTGCAACCATGACCTCTCAGCCAGTGACACGGA
TGATCGTATTTTTTCACATGGCAAAAGCAATAACAACGTATGTGCGGTGATTTGTTATCA
AGTATTCGGCTGCACCGTAAACAGATCTCCGCACATCCAGGTTA
>Rosalind_7123
CAAGTTCGTCGTGAGCGGCACAATCATTTTAGCTCTGGAGAAATGCATCATCATTAGCGG
AAAGGTCAGCCACTCTCTTCAGTCCTCTACGTACTGCGCGCACATGGGTACAAGACCCTT
CCCCAGAATGTAGGAAATGTCCGGCTTGGTTTTTAGCCAACCTTACACCGCCTCAGATAG
AGTGATACCACCTATCCTAGCTATGTTTTGGCAAAAATGCCGCGTGTCCCTTTAGGAGAG
GACTAAGGTCCCAATTGTGCGGACTTTTGGGTATAATGGTGTTCCTGTCGAAGAACAGAA
CGGTTAAGGTGCAGCACTAGAACGTGGCCGGGGAGTAATGCAAAAGGACTTCCCGCGGAG
ACCCTAAGGTGAGAAACGATCTTGTGTCCTGCCAGAGAAGACCGTCAATTAACTGCTCAC
TGTTGCTTGTTTGGCGCTATCGGCTATGATCTAATGGGAGAAGGAGTAAGACACGACTCT
TTTTGCGCGGCGCTGATGACCAACAAGGTACATTGGGTCATCAGGGACTTTCATTGCTCA
TTAGGGAATACGGGTCGATTCCCCTCAGTGAATGAGCCCACACTAATACGCTTTGGGAAT
ACGGAACGACGCGGTGACTGTATGGTCTGATCGTCAATGAGCTACCCGGAGACGGCACTT
CTTTTCTTCGCCGATATGTAAGACAGTCCATAGGGACGCACGATTACGGGTGTACCGCCC
TATTAGGACGGTCTGCGCTTTCCATAGTAATTCGTTGTCTACCTCGGACCGAGAACGACA
TCCATTCACTAGGGCGTTCAAGGGAAGTTCTCAAAGTTTTATTCATCCGTCTCCGCGTAG
GTGTGCCAAACGGGAAGAGGTTGGTTGCGCCACTGTCTCGTTCTTGCGGTAGGGTGGCCG
TTGCGGGCCCAATGACCTACCTCCTAGGTAGCTGTGAGGCCATATTAAAACGACCTTATA
TGACGA
>Rosalind_6749
GCCAGAAACAGCGCCGCCGTGCCCTCTCTTCCCCGATGCAAGGTTAAGACAGGTATTTAC
GTGGCGTCTAGCCAATGAATGAATTGAGACCAGGCTTAATATAATGATACTAGTGTTGTC
GTCCGAAATGTCACATAATAAATATTCCAATTCTCTGGTGGATCGCCGAGAAATGGGTGG
ATGGTTAACCTGTGGAGTTGCCACTGCAACGGTAATTGTGATCATGTGTCTAGATACGCA
TCCAGCCGTTTTCGCATCGTTGCTTCGCCACTAAACCGTGACGCGCAAGTCCCCTCTCGG
GACGTTGGTTGCGTTCGCGTTAGTATGCGGACTCTAATTATTACGTAGGTGTATTCGGGG
ACTCTGGTTTACATCGATGAAATCTGGTTTCTGATTTTAGGTTACGTTGTAGTGTCAGGA
TTTCTGGCCGCCTCACTTATGGAGGACTGTGGTTACGTTAAAAGGGGTTAGCGTTATCCG
CGAGTATTCCTTTTCATTAGGACGAAATGCACGAGTTCGGCCTGGCTCTCCTGGATGACA
CCAAAAATGGATCTCCGACATCGTAGCTGTACGCATATGCCGCTTAACCTGAGGGAAAAC
TGTGACACCCCGTGCGAAGTGTGGGAATGACGTCCGAAAGCGGATCAACCGTCCTCAGAG
ATATAACGAATCTAATTTAGGTGAAAAGCTGAGCAATTATTAAGTCTGGTTCAACCTGGC
ATTCGGGAGACCTAAGGCGAGGCTACGCCAGGTATCCACATTCCGGAGGACTGACTTGGC
GCGTATGAGGCACTAAAATACTTACCGAGCGCTTACCACTCTCCCATACAGTCTCTCCAA
GAACAGCACCCGGGAAAGCCGGTAATATCCGGAAATGTGATTCCATTCTCGCTACGCTCC
AGACCATAGGAACCGGTTGAAAAAAAGCCTGCCCACAGTAAAATAGCACTATTAGCGTCA
TATTTACAGGGCAGGCTCTTT
>Rosalind_6297
GACTAGTGACAGTGGTGCGATGTATGAGCATGTATGGGTTGATGGTAAGCTAACTTACAG
TCGGATATCGGGACTTGTCAATCTGGCGCCTCAAACCTGATGTCCCGGCGAACCGGCTTT
ACCGGGGTCCATATGTGGTCATCGTTCATTGTATTGTCGGAAACTATTTAACCACCCAGC
TATCGTGAGCCATATTATTGTAGCTAGTCGCCAAATCGACTCTTGGAAGTGGAGGCCATT
GATGTACCAGTCTTCTTGGCACGGGGTATGAAGTAGTACTTCGAACGTTCGGGCCGGTTA
TGACGCATTAACGTGTCGACGTAGTAGTAAGTTGTCGATTTTCATTGCTCCTAGACTTAT
TAGCTCAGTACTTCTAGGACTGCTACGGCTATAGTTTTTTCTCCTAGCTCCTGCGTAGTC
CGAGAGGTCTTCTATAGGATCAAGGATTGATCTTGACGTCCTAGGCTGAATTGGTCGTAC
TTAAGCGGTTGATAACGGACCGGGGTAGGACCCTCCCAGTGACAAGCGCCTAAAAATAAC
CCGGATGCATGATTCCTGTCGAGGACCCTTCTACTTGCATCCTCAGGGGTCGCGGCATGC
ATTATTGGTAAGTATTCTAGGAGACTGTTGTTTCAAACACTCGGTGGAAGCGTCCCCAGA
TCAAATATAGGGCAAAGGTCATGTACAGTTCACCCAATCACTTACATATGAATATTCGCA
GGCAGCTCTGCACAAATATTATTTCGCCCGCCCCCCTCGTCTTGCGCTAAGATCGGTGTT
ATTCTATACTAGGGACGTATTTAGAGCGCTGAG
>Rosalind_3697
TCAACCTCACTTAGATAACTGCACTGAACCCAAATAGACTTCCGCTAACTTCCATTAGAG
TGGCCGTAGATTAGCGAGATCACCATTCGCAAGAGCGGAGCATTTGAAGGAGTTCGTGCG
TCCTGCCGCTTAGAAGCCCGGGGGATGGTGTGCTTGTGGGAGCCGTTAGCAGGCTTGAGT
CCACATGTACCGGATTGTGCACCATCTTGACGAACCGCTGTGTTCATTGTATTCTTATGC
AGACGTGTTCACCTAATGCGTCCACGGTCAAAACCGGCGCGGGACATCTACACTGCTAAG
AGCTTTACCCTGCACATGCCATCAGACGCGCTTAAAACGTTTGGCCCAGTTCCTACACAC
TTGTATCGTCCGGTCTATGTACGCCCGGCATAAGATCTGCTCGGCGAGATGCCCAAGGCC
AGAGCGGTAACCGATCCCGTGCGCACCAGATTTCGGTTTCTGAGAGCTGGTGGCTGAAGA
GCAGCCATCACCGAATACGGGTGGTCCTCTGAAGTGCGCAGTATTCCTCGGTTCATTGCG
GGTTCCAGAAAGGTTTATATTTTACCAAAGGTCAGCGGCGAACTGCATCTACAAGAACAC
CCAACGAACTCTATTGTATCTGTTGCGCAGGTTTAGACCAGGAACCTTGCTCAGCGTCAC
AAGTAACTTCTACAATATTGGGGATTTGGCTAGTCCGCACAGTTCCTCGGCTGTGAGACA
TGAGTATCAAGTATCAACACAGTACCGATGAGTATTATAAAACATATGCTCGTTGTCGGT
TGTAAAATCCACATGGCCCGAACAATATACGCTACGGCTGAAGGGATGAACACTTCGCAA
TAGCTGCCCACCATGGACGCATGAGGATGAGGTCAATATTGCTATACGCCTCCAAGAGAT
TCTCACTACAACCATG
"""

for line in seq3_fasta.strip().split("\n"):
    if line.startswith(">"):
        current_header = line[1:]
        fasta_dict[current_header] = "" 
    else:
        fasta_dict[current_header] += line.strip()

print(fasta_dict)


### we need to select string with the highest GC-content

